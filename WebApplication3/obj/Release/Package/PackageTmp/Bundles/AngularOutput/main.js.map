{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./ScheduleAppointmentFeedback.ts","./src/CustomerToSchedule.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class ScheduleAppointmentFeedback {\r\n  FeedbackDefault: boolean;\r\n  FeedbackSuccess: boolean;\r\n  FeedbackWarning: boolean;\r\n  FeedbackDanger: boolean;\r\n\r\n  FeedbackMessage: string;\r\n}\r\n","export class CustomerToSchedule {\r\n  Name: string;\r\n\r\n  PhoneNumber: string;\r\n\r\n  BarberName: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { BarberAndWaitTime } from '../../BarberAndWaitTime';\r\nimport { ScheduledCustomer } from '../../ScheduledCustomer';\r\nimport { CustomerToSchedule } from '../CustomerToSchedule';\r\nimport { ScheduleAppointmentFeedback } from '../../ScheduleAppointmentFeedback';\r\n\r\n\n@Component({\n  selector: 'app-barber-scheduler',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent implements OnInit {\n  public constructor(private titleService: Title, public http: HttpClient) {\n  }\n  scheduleAppointmentFeedback: ScheduleAppointmentFeedback;\n  customerToSchedule: CustomerToSchedule;\n\n  scheduledCustomers: ScheduledCustomer[];\n  barbersAndWaitTimes: BarberAndWaitTime[];\n\n  ngOnInit() {\n    this.customerToSchedule = new CustomerToSchedule();\n    this.customerToSchedule.Name = '';\n    this.customerToSchedule.PhoneNumber = '';\n    this.customerToSchedule.BarberName = '';\n\n    this.scheduleAppointmentFeedback = new ScheduleAppointmentFeedback();\n    this.scheduleAppointmentFeedback.FeedbackDefault = true;\n    this.scheduleAppointmentFeedback.FeedbackSuccess = false;\n    this.scheduleAppointmentFeedback.FeedbackWarning = false;\n    this.scheduleAppointmentFeedback.FeedbackDanger = false;\n    this.scheduleAppointmentFeedback.FeedbackMessage = '';\n\n    this.getAllScheduledCustomers();\r\n  }\n\n  getBarbersAndWaitTimes(): void {\n    this.http.post<any>('../../Barber/GetEstimatedTime', JSON.stringify({}), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } })\n      .subscribe(\n        data => { this.barbersAndWaitTimes = data; },\n        error => { alert(error) }\n      )\r\n  }\n\n  getAllScheduledCustomers(): void {\n    this.http.post<any>('../../Barber/GetScheduledCustomers', JSON.stringify({}), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } })\n      .subscribe(\n        data => {\n          this.scheduledCustomers = data;\r\n          this.getBarbersAndWaitTimes();\r\n        },\n        error => { alert(error) }\n      )\r\n  }\n\n  scheduleCustomer(): void {\n    this.http.post<any>('../../Barber/ScheduleCustomer', JSON.stringify({\n      Name: this.customerToSchedule.Name,\n      PhoneNumber: this.customerToSchedule.PhoneNumber,\n      BarberName: this.customerToSchedule.BarberName\r\n    }), { headers: { 'Content-Type': 'application/json;charset=UTF-8' }} )\n      .subscribe(\n        data => {\r\n          // clear out the data by default.\r\n          this.scheduleAppointmentFeedback.FeedbackDefault = true;\n          this.scheduleAppointmentFeedback.FeedbackSuccess = false;\n          this.scheduleAppointmentFeedback.FeedbackWarning = false;\n          this.scheduleAppointmentFeedback.FeedbackDanger = false;\n          this.scheduleAppointmentFeedback.FeedbackMessage = '';\r\n\r\n          // set the success message in our alert box.\r\n          this.scheduleAppointmentFeedback.FeedbackMessage = data;\r\n\r\n          // determine the styling.\r\n          var alertType: string = '';\r\n\r\n          if (data.startsWith('Success:')) {\r\n            alertType = 'Success';\r\n          } else if (data.startsWith('Warning:')) {\r\n            alertType = 'Warning';\r\n          } else if (data.startsWith('Error:')) {\r\n            alertType = 'Error';\r\n          }\r\n\r\n          switch (alertType) {\r\n            case 'Success':\r\n              this.scheduleAppointmentFeedback.FeedbackSuccess = true;\r\n                  break;\r\n\r\n            case 'Warning':\r\n              this.scheduleAppointmentFeedback.FeedbackWarning = true;\r\n                  break;\r\n\r\n            case 'Error':\r\n              this.scheduleAppointmentFeedback.FeedbackDanger = true;\r\n                  break;\r\n\r\n            default:\r\n              this.scheduleAppointmentFeedback.FeedbackDefault = true;\r\n                  break;\r\n          }\r\n\r\n          // after we schedule a customer, we need to retrieve the list again.\r\n          this.getAllScheduledCustomers()\r\n        },\n        error => {\n          // set the error message in our alert box.\r\n          alert(error)\r\n        }\n      )\r\n  }\n\n  moveScheduledCustomer(appointmentID: number, barberNameRequested: string, barberScheduleType: number): void {\n    this.http.post<any>('../../Barber/SetCustomerInBarberChair',\n      JSON.stringify({\n        AppointmentID: appointmentID,\n        BarberNameRequested: barberNameRequested,\n        BarberScheduleType: barberScheduleType\n      }), { headers: { 'Content-Type': 'application/json;charset=UTF-8' } })\n      .subscribe(\n        data => {\n          this.getAllScheduledCustomers();\r\n        },\n        error => {\n          alert(error)\r\n        }\n      )\n\r\n  }\n}\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xs-12 col-sm-12 col-lg-6\">\r\n      <h1>Barber Shop Code Challenge (Angular 9)</h1>\r\n      <h5>by Justin Blackwood</h5>\r\n      <br />\r\n\r\n      <div class=\"card\">\r\n        <ul class=\"list-group\">\r\n          <li class=\"list-group-item\" style=\"background-color:#c6c8ca; color: #1b1e21; padding: 4px 10px 10px 10px;\" >\r\n            <h3>Estimated Time</h3>\r\n          </li>\r\n\r\n          <li class=\"list-group-item\" style=\"padding: 0px; border-top-width:0px;\">\r\n            <table class=\"table\" style=\"margin:0px;\">\r\n              <tbody>\r\n              <tr style=\"font-weight:700\">\r\n                <td>Barber Name</td>\r\n                <td>Wait Time (mins):</td>\r\n              </tr>\r\n\r\n              <tr *ngFor=\"let barberAndWaitTime of barbersAndWaitTimes\"\r\n                  [ngClass]=\"{\r\n                   'success': barberAndWaitTime.WaitTimeSuccess,\r\n\t\t\t\t\t\t\t\t   'warning': barberAndWaitTime.WaitTimeWarning,\r\n\t\t\t\t\t\t\t\t   'danger': barberAndWaitTime.WaitTimeDanger}\">\r\n                <td>\r\n                  {{barberAndWaitTime.BarberName}}\r\n                </td>\r\n                <td>\r\n                  {{barberAndWaitTime.WaitTime}}\r\n                </td>\r\n              </tr>\r\n                </tbody>\r\n            </table>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <br />\r\n\r\n      <div class=\"card\">\r\n        <ul class=\"list-group\">\r\n          <li class=\"list-group-item\" style=\"background-color:#c6c8ca; color: #1b1e21; padding: 4px 10px 10px 10px;\">\r\n            <h3>Schedule Appointment</h3>\r\n          </li>\r\n\r\n          <li class=\"list-group-item\">\r\n            <label class=\"align-form-labels\" for=\"name\">Customer Name</label>\r\n            <input type=\"text\" style=\"width:170px;\" required class=\"form-control text-box single-line\" id=\"name\" [(ngModel)]=\"customerToSchedule.Name\" />\r\n            <span class=\"field-validation-valid\"></span>\r\n          </li>\r\n\r\n          <li class=\"list-group-item\">\r\n            <label class=\"align-form-labels\">Phone Number</label>\r\n            <input type=\"text\" style=\"width:170px;\" required class=\"form-control text-box single-line\" id=\"phoneNumber\" [(ngModel)]=\"customerToSchedule.PhoneNumber\" />\r\n</li>\r\n\r\n          <li class=\"list-group-item\">\r\n            <label class=\"align-form-labels\">Barber Name</label>\r\n            <input type=\"text\" style=\"width:170px;\" required class=\"form-control text-box single-line\" id=\"barberName\" [(ngModel)]=\"customerToSchedule.BarberName\" />\r\n</li>\r\n\r\n          <li class=\"list-group-item\">\r\n            <div style=\"display: inline-block;\">\r\n              <button (click)=\"scheduleCustomer()\" type=\"button\" class=\"btn btn-success btn-lg submit\" style=\"float:left;\">Submit</button>\r\n\r\n              <div id=\"scheduleCustomerAlertDiv\"\r\n                   class=\"alert in\"\r\n                   [ngClass]=\"{\r\n                   'alert-success': scheduleAppointmentFeedback.FeedbackSuccess,\r\n\t\t\t\t\t\t\t\t   'alert-warning': scheduleAppointmentFeedback.FeedbackWarning,\r\n\t\t\t\t\t\t\t\t   'alert-danger': scheduleAppointmentFeedback.FeedbackDanger }\"\r\n                   style=\"float:right; margin: 0 0 0 50px; font-weight: 700\">\r\n                <strong><span class=\"alert-content\">{{ scheduleAppointmentFeedback.FeedbackMessage }}</span></strong>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <br />\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-xs-12 col-sm-12 col-lg-6\">\r\n      <ul class=\"list-group\">\r\n        <li class=\"list-group-item\" style=\"background-color:#c6c8ca; color: #1b1e21; padding: 4px 10px 10px 10px;\" >\r\n          <h3>Scheduled Customers</h3>\r\n        </li>\r\n\r\n        <li class=\"list-group-item\" style=\"padding: 0px; border-top-width:0px;\">\r\n          <div id=\"scheduledCustomersDiv\">\r\n            <table class=\"table\" style=\"margin:0px;\">\r\n              <tbody>\r\n              <tr style=\"font-weight:700;\">\r\n                <td>Customer Name</td>\r\n                <td>Phone Number</td>\r\n                <td>Wait Time (mins)</td>\r\n                <td>Barber Requested</td>\r\n                <td>Barber Management</td>\r\n              </tr>\r\n\r\n              <tr *ngFor=\"let scheduledCustomer of scheduledCustomers\"\r\n                  [ngClass]=\"{\r\n                    'assigned-barber': scheduledCustomer.CurrentBarberAssigned,\r\n\t\t\t\t\t\t\t\t\t\t'not-assigned-barber':!scheduledCustomer.CurrentBarberAssigned\r\n                  }\">\r\n                <td> {{scheduledCustomer.Name}} </td>\r\n                <td> {{scheduledCustomer.PhoneNumber}} </td>\r\n                <td> {{scheduledCustomer.WaitTime}} </td>\r\n                <td> {{scheduledCustomer.BarberNameRequested}} </td>\r\n\r\n                <!-- if not assigned a barber -->\r\n                <td *ngIf=\"!scheduledCustomer.CurrentBarberAssigned\">\r\n                  <button class=\"btn btn-info submit\" (click)=\"moveScheduledCustomer(scheduledCustomer.AppointmentID, scheduledCustomer.BarberNameRequested, 1)\">In Chair</button> <!-- put value of 1 at end for \"InChair\" option. -->\r\n                  <button class=\"btn btn-info submit\" (click)=\"moveScheduledCustomer(scheduledCustomer.AppointmentID, scheduledCustomer.BarberNameRequested, 2)\">Lowest Wait Time</button> <!-- put value of 2 at end for \"NextAvailableBarber\" option. -->\r\n                </td>\r\n\r\n                <!-- if assigned a barber -->\r\n                <td *ngIf=\"scheduledCustomer.CurrentBarberAssigned\">\r\n                  Assigned to: {{scheduledCustomer.CurrentBarberAssigned}}\r\n                  <button class=\"btn btn-info submit\" (click)=\"moveScheduledCustomer(scheduledCustomer.AppointmentID, scheduledCustomer.BarberNameRequested, 3)\">Mark Done</button> <!-- mput value of 3 at end for \"MarkDone\" option. -->\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-xs-12 col-sm-12 col-lg-6\" style=\"margin-top:70px;\">\r\n      <p>\r\n        <a class=\"btn btn-primary\" data-toggle=\"collapse\" href=\"#collapseImplementationDetails\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n          View Implementation Details\r\n        </a>\r\n      </p>\r\n      <div class=\"collapse\" id=\"collapseImplementationDetails\">\r\n        <div class=\"card card-body\">\r\n          <b>Written by: Justin Blackwood</b><br />\r\n          Started on February 7th, 2020 at 5:00pm EST<br />\r\n          Completed on February 8th, 2020 at 9:15pm EST <br />\r\n          Angular 9 implementation built completely on February 12th, 2020<br /><br />\r\n\r\n          <b>Technical Details:</b><br />\r\n          Data is persisted for 60 minutes using server-side Session data storage.<br />\r\n          Angular: v9.0.1<br />\r\n          Node: v12.16.0 (for package management) <br />\r\n          ASP.NET MVC: v5.2.7.0<br />\r\n          Uses ASP.NET Razor, JavaScript, JQuery and Bootstrap styles.<br />\r\n          Has client-side and server-side validation.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms'\n\nimport { AppComponent } from './app.component';\r\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode, Component } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n//// added this.\n//@Component({\n//  selector: 'app-root',\n//  templateUrl: './index.html',\n//  styleUrls: ['./styles.css']\n//})\n\n// added this\n//export class AppComponentMain { }\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}